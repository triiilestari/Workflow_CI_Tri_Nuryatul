name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      # Set up Python environment
      - name: Set up Python 3.12.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.11"

      # Check environment (optional debug)
      - name: Check Env
        run: |
          echo "RUNNING IN GITHUB CI"
          ls -al MLProject

      # Install Dependency
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow 


      # Run training python file
      - name: Run training script
        shell : bash -l {0}
        run: |
          mlflow run MLProject --env-manager=local

      # mencari run_id terbaru dari direktori mlruns/0/ dan menyimpannya sebagai variabel lingkungan baru bernama RUN_ID.
      - name: Get latest MLflow run_id
        run: |
          RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"

      # Build Docker
      - name: Build Docker Model
        run: |
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "ner_sequence_triiilestari"

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag cc ${{ secrets.DOCKER_HUB_USERNAME }}/ner_sequence_triiilestari:latest

      # Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ner_sequence_triiilestari:latest
        
      # Save models to GitHub Repository
      - name: Save mlruns to repo
        run: |
          mv ner_model_sequence.h5 MLProject
          git config --global user.name ${{ secrets.username }}
          git config --global user.email ${{ secrets.email }}
          git add MLProject/ner_model_sequence.h5
          git commit -m "Save model"
          git push origin main

      # Upload file 
      - name: Upload trained model as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: MLProject/ner_model_sequence.h5
